;
/*! code */;
eval("var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\ndefine(\"683aa047-8043-40f8-8d31-beb7ab1b138c/animation\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Animated = void 0;\r\n    var Animated = /** @class */ (function () {\r\n        function Animated(args) {\r\n            this.sender = 'initial';\r\n            this.type = args.type;\r\n            this.name = args.name;\r\n            this.speed = args.speed;\r\n            this.channel = args.channel;\r\n            this.sender = args.sender;\r\n            this.loop = args.loop;\r\n            this.timestamp = args.timestamp;\r\n        }\r\n        Animated = __decorate([\r\n            Component('org.decentraland.Animation'),\r\n            __metadata(\"design:paramtypes\", [Object])\r\n        ], Animated);\r\n        return Animated;\r\n    }());\r\n    exports.Animated = Animated;\r\n});\r\ndefine(\"683aa047-8043-40f8-8d31-beb7ab1b138c/delay\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.setTimeout = exports.DelaySystem = void 0;\r\n    var callbacks = {};\r\n    var DelaySystem = /** @class */ (function () {\r\n        function DelaySystem() {\r\n        }\r\n        DelaySystem.prototype.update = function (dt) {\r\n            var e_1, _a;\r\n            for (var timestamp in callbacks) {\r\n                if (+timestamp < Date.now()) {\r\n                    var callbackArray = callbacks[timestamp];\r\n                    try {\r\n                        for (var callbackArray_1 = (e_1 = void 0, __values(callbackArray)), callbackArray_1_1 = callbackArray_1.next(); !callbackArray_1_1.done; callbackArray_1_1 = callbackArray_1.next()) {\r\n                            var callback = callbackArray_1_1.value;\r\n                            callback();\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (callbackArray_1_1 && !callbackArray_1_1.done && (_a = callbackArray_1.return)) _a.call(callbackArray_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                    delete callbacks[timestamp];\r\n                }\r\n            }\r\n        };\r\n        return DelaySystem;\r\n    }());\r\n    exports.DelaySystem = DelaySystem;\r\n    function setTimeout(callback, timeout) {\r\n        var key = Date.now() + timeout;\r\n        if (!(key in callbacks)) {\r\n            callbacks[key] = [];\r\n        }\r\n        callbacks[key].push(callback);\r\n    }\r\n    exports.setTimeout = setTimeout;\r\n});\r\ndefine(\"683aa047-8043-40f8-8d31-beb7ab1b138c/game\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n});\r\n//import Tools, { Props } from './item'\r\n//\r\n//const tools = new Tools()\r\n//const toolsSpawner = new Spawner<Props>(tools)\r\n//\r\n//toolsSpawner.spawn('tools', new Transform(), {})\r\n//\r\n//const box = new Entity('box')\r\n//engine.addEntity(box)\r\n//box.addComponent(new BoxShape())\r\n//box.addComponent(new Transform({ position: new Vector3(4, 4, 4) }))\r\n//box.addComponent(\r\n//  new OnPointerDown(() => {\r\n//    const bus = new MessageBus()\r\n//    bus.emit('tools', {\r\n//      entityName: 'tools',\r\n//      sender: 'channel-id',\r\n//      actionId: 'delay',\r\n//      values: {\r\n//        delay: 2,\r\n//        onComplete: [\r\n//          {\r\n//            entityName: 'tools',\r\n//            sender: 'channel-id',\r\n//            actionId: 'print',\r\n//            values: {\r\n//              message: 'Hola',\r\n//              duration: 5,\r\n//            },\r\n//          },\r\n//          {\r\n//            entityName: 'tools',\r\n//            sender: 'channel-id',\r\n//            actionId: 'delay',\r\n//            values: {\r\n//              delay: 1,\r\n//              onComplete: [\r\n//                {\r\n//                  entityName: 'tools',\r\n//                  sender: 'channel-id',\r\n//                  actionId: 'print',\r\n//                  values: {\r\n//                    message: 'Como andas',\r\n//                    duration: 5,\r\n//                  },\r\n//                },\r\n//              ],\r\n//            },\r\n//          },\r\n//        ],\r\n//      },\r\n//    })\r\n//\r\n//    bus.emit('tools', {\r\n//      entityName: 'tools',\r\n//      actionId: 'move',\r\n//      values: {\r\n//        target: 'box',\r\n//        x: 4,\r\n//        y: 0,\r\n//        z: 4,\r\n//        curve: 'easeinexpo',\r\n//        speed: 10,\r\n//        relative: false,\r\n//        onComplete: [\r\n//          {\r\n//            entityName: 'tools',\r\n//            actionId: 'move',\r\n//            values: {\r\n//              target: 'box',\r\n//              x: 0,\r\n//              y: 5,\r\n//              z: 0,\r\n//              curve: 'easeinoutelastic',\r\n//              speed: 10,\r\n//              relative: true,\r\n//              onComplete: [\r\n//                {\r\n//                  entityName: 'tools',\r\n//                  actionId: 'scale',\r\n//                  values: {\r\n//                    target: 'box',\r\n//                    x: 2,\r\n//                    y: 2,\r\n//                    z: 2,\r\n//                    curve: 'easeinoutsine',\r\n//                    speed: 10,\r\n//                    relative: true,\r\n//                    onComplete: [\r\n//                      {\r\n//                        entityName: 'tools',\r\n//                        actionId: 'rotate',\r\n//                        values: {\r\n//                          target: 'box',\r\n//                          x: 0,\r\n//                          y: 0,\r\n//                          z: 180,\r\n//                          curve: 'linear',\r\n//                          speed: 10,\r\n//                          relative: true,\r\n//                          onComplete: [],\r\n//                        },\r\n//                      },\r\n//                    ],\r\n//                  },\r\n//                },\r\n//              ],\r\n//            },\r\n//          },\r\n//        ],\r\n//      },\r\n//    })\r\n//  })\r\n//)\r\n//\r\ndefine(\"683aa047-8043-40f8-8d31-beb7ab1b138c/tween\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.easingConverter = exports.CurveType = exports.TweenSystem = exports.Tweenable = exports.Syncable = void 0;\r\n    var Syncable = /** @class */ (function () {\r\n        function Syncable() {\r\n        }\r\n        Syncable = __decorate([\r\n            Component('org.decentraland.Syncable')\r\n        ], Syncable);\r\n        return Syncable;\r\n    }());\r\n    exports.Syncable = Syncable;\r\n    var Tweenable = /** @class */ (function () {\r\n        function Tweenable(args) {\r\n            this.transition = 0;\r\n            this.curve = CurveType.LINEAR;\r\n            this.sender = 'initial';\r\n            this.type = args.type;\r\n            this.x = args.x;\r\n            this.y = args.y;\r\n            this.z = args.z;\r\n            this.speed = args.speed;\r\n            this.relative = args.relative;\r\n            this.onComplete = args.onComplete;\r\n            this.channel = args.channel;\r\n            this.origin = args.origin;\r\n            this.curve = args.curve;\r\n            this.sender = args.sender;\r\n            this.timestamp = args.timestamp;\r\n        }\r\n        Tweenable = __decorate([\r\n            Component('org.decentraland.Tweenable'),\r\n            __metadata(\"design:paramtypes\", [Object])\r\n        ], Tweenable);\r\n        return Tweenable;\r\n    }());\r\n    exports.Tweenable = Tweenable;\r\n    var offsetFactory = function (tweenable, relative) { return function (axis) {\r\n        var value = tweenable[axis];\r\n        var offset = relative[axis];\r\n        return tweenable.relative ? value + offset : value;\r\n    }; };\r\n    var TweenSystem = /** @class */ (function () {\r\n        function TweenSystem() {\r\n            this.syncableGroup = engine.getComponentGroup(Syncable);\r\n            this.tweenableGroup = engine.getComponentGroup(Tweenable);\r\n        }\r\n        TweenSystem.prototype.update = function (dt) {\r\n            var e_2, _a;\r\n            try {\r\n                for (var _b = __values(this.tweenableGroup.entities), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var entity = _c.value;\r\n                    var tweenable = entity.getComponent(Tweenable);\r\n                    var transform = entity.getComponent(Transform);\r\n                    var speed = tweenable.speed / 10;\r\n                    switch (tweenable.type) {\r\n                        case 'move': {\r\n                            var start = tweenable.origin;\r\n                            var offset = offsetFactory(tweenable, start);\r\n                            var end = new Vector3(offset('x'), offset('y'), offset('z'));\r\n                            if (tweenable.transition >= 0 && tweenable.transition < 1) {\r\n                                tweenable.transition += dt * speed;\r\n                                var easingIndex = easingConverter(tweenable.transition, tweenable.curve);\r\n                                transform.position.copyFrom(Vector3.Lerp(start, end, easingIndex));\r\n                            }\r\n                            else if (tweenable.transition >= 1) {\r\n                                tweenable.transition = -1;\r\n                                transform.position.copyFrom(end);\r\n                                // send actions\r\n                                tweenable.channel.sendActions(tweenable.onComplete);\r\n                            }\r\n                            break;\r\n                        }\r\n                        case 'rotate': {\r\n                            var start = Quaternion.Euler(tweenable.origin.x, tweenable.origin.y, tweenable.origin.z);\r\n                            var end = start.multiply(Quaternion.Euler(tweenable.x, tweenable.y, tweenable.z));\r\n                            if (tweenable.transition >= 0 && tweenable.transition < 1) {\r\n                                tweenable.transition += dt * speed;\r\n                                var easingIndex = easingConverter(tweenable.transition, tweenable.curve);\r\n                                transform.rotation.copyFrom(Quaternion.Slerp(start, end, easingIndex));\r\n                            }\r\n                            else if (tweenable.transition >= 1) {\r\n                                tweenable.transition = -1;\r\n                                transform.rotation.copyFrom(end);\r\n                                entity.removeComponent(Tweenable);\r\n                                // send actions\r\n                                tweenable.channel.sendActions(tweenable.onComplete);\r\n                            }\r\n                            break;\r\n                        }\r\n                        case 'scale': {\r\n                            var start = tweenable.origin;\r\n                            var offset = offsetFactory(tweenable, start);\r\n                            var end = new Vector3(offset('x'), offset('y'), offset('z'));\r\n                            if (tweenable.transition >= 0 && tweenable.transition < 1) {\r\n                                tweenable.transition += dt * speed;\r\n                                var easingIndex = easingConverter(tweenable.transition, tweenable.curve);\r\n                                transform.scale.copyFrom(Vector3.Lerp(start, end, easingIndex));\r\n                            }\r\n                            else if (tweenable.transition >= 1) {\r\n                                tweenable.transition = -1;\r\n                                transform.scale.copyFrom(end);\r\n                                entity.removeComponent(Tweenable);\r\n                                // send actions\r\n                                tweenable.channel.sendActions(tweenable.onComplete);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        };\r\n        return TweenSystem;\r\n    }());\r\n    exports.TweenSystem = TweenSystem;\r\n    var CurveType;\r\n    (function (CurveType) {\r\n        CurveType[\"LINEAR\"] = \"linear\";\r\n        CurveType[\"EASEINSINE\"] = \"easeinsine\";\r\n        CurveType[\"EASEOUTSINE\"] = \"easeoutsine\";\r\n        CurveType[\"EASEINOUTSINE\"] = \"easeinoutsine\";\r\n        CurveType[\"EASEINQUADRATIC\"] = \"easeinquadratic\";\r\n        CurveType[\"EASEOUTQUADRATIC\"] = \"easeoutquadratic\";\r\n        CurveType[\"EASEINOUTQUADRATIC\"] = \"easeinoutquadratic\";\r\n        CurveType[\"EASEINCUBIC\"] = \"easeincubic\";\r\n        CurveType[\"EASEOUTCUBIC\"] = \"easeoutcubic\";\r\n        CurveType[\"EASEINOUTCUBIC\"] = \"easeinoutcubic\";\r\n        CurveType[\"EASEINEXPO\"] = \"easeinexpo\";\r\n        CurveType[\"EASEOUTEXPO\"] = \"easeoutexpo\";\r\n        CurveType[\"EASEINOUTEXPO\"] = \"easeinoutexpo\";\r\n        CurveType[\"EASEINELASTIC\"] = \"easeinelastic\";\r\n        CurveType[\"EASEOUTELASTIC\"] = \"easeoutelastic\";\r\n        CurveType[\"EASEINOUTELASTIC\"] = \"easeinoutelastic\";\r\n        CurveType[\"EASEINBOUNCE\"] = \"easeinbounce\";\r\n        CurveType[\"EASEOUTEBOUNCE\"] = \"easeoutbounce\";\r\n        CurveType[\"EASEINOUTBOUNCE\"] = \"easeinoutbounce\";\r\n    })(CurveType = exports.CurveType || (exports.CurveType = {}));\r\n    function easingConverter(x, curveType) {\r\n        switch (curveType) {\r\n            case CurveType.LINEAR:\r\n                return x;\r\n                break;\r\n            case CurveType.EASEINSINE:\r\n                return 1 - Math.cos((x * Math.PI) / 2);\r\n                break;\r\n            case CurveType.EASEOUTSINE:\r\n                return Math.sin((x * Math.PI) / 2);\r\n                break;\r\n            case CurveType.EASEINOUTSINE:\r\n                return -(Math.cos(Math.PI * x) - 1) / 2;\r\n                break;\r\n            case CurveType.EASEINQUADRATIC:\r\n                return x * x;\r\n                break;\r\n            case CurveType.EASEOUTQUADRATIC:\r\n                return 1 - (1 - x) * (1 - x);\r\n                break;\r\n            case CurveType.EASEINOUTQUADRATIC:\r\n                return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\r\n                break;\r\n            case CurveType.EASEINCUBIC:\r\n                return x * x * x;\r\n                break;\r\n            case CurveType.EASEOUTCUBIC:\r\n                return 1 - Math.pow(1 - x, 3);\r\n                break;\r\n            case CurveType.EASEINOUTCUBIC:\r\n                return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\r\n                break;\r\n            case CurveType.EASEINEXPO:\r\n                return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\r\n                break;\r\n            case CurveType.EASEOUTEXPO:\r\n                return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\r\n                break;\r\n            case CurveType.EASEINOUTEXPO:\r\n                return x === 0\r\n                    ? 0\r\n                    : x === 1\r\n                        ? 1\r\n                        : x < 0.5\r\n                            ? Math.pow(2, 20 * x - 10) / 2\r\n                            : (2 - Math.pow(2, -20 * x + 10)) / 2;\r\n                break;\r\n            case CurveType.EASEINELASTIC:\r\n                var c4 = (2 * Math.PI) / 3;\r\n                return x === 0\r\n                    ? 0\r\n                    : x === 1\r\n                        ? 1\r\n                        : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\r\n                break;\r\n            case CurveType.EASEOUTELASTIC:\r\n                var c5 = (2 * Math.PI) / 3;\r\n                return x === 0\r\n                    ? 0\r\n                    : x === 1\r\n                        ? 1\r\n                        : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c5) + 1;\r\n                break;\r\n            case CurveType.EASEINOUTELASTIC:\r\n                var c6 = (2 * Math.PI) / 4.5;\r\n                return x === 0\r\n                    ? 0\r\n                    : x === 1\r\n                        ? 1\r\n                        : x < 0.5\r\n                            ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c6)) / 2\r\n                            : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c6)) / 2 + 1;\r\n                break;\r\n            case CurveType.EASEINBOUNCE:\r\n                return 1 - bounce(1 - x);\r\n                break;\r\n            case CurveType.EASEOUTEBOUNCE:\r\n                return bounce(x);\r\n                break;\r\n            case CurveType.EASEINOUTBOUNCE:\r\n                return x < 0.5 ? (1 - bounce(1 - 2 * x)) / 2 : (1 + bounce(2 * x - 1)) / 2;\r\n                break;\r\n        }\r\n    }\r\n    exports.easingConverter = easingConverter;\r\n    function bounce(x) {\r\n        var n1 = 7.5625;\r\n        var d1 = 2.75;\r\n        if (x < 1 / d1) {\r\n            return n1 * x * x;\r\n        }\r\n        else if (x < 2 / d1) {\r\n            return n1 * (x -= 1.5 / d1) * x + 0.75;\r\n        }\r\n        else if (x < 2.5 / d1) {\r\n            return n1 * (x -= 2.25 / d1) * x + 0.9375;\r\n        }\r\n        else {\r\n            return n1 * (x -= 2.625 / d1) * x + 0.984375;\r\n        }\r\n    }\r\n});\r\ndefine(\"683aa047-8043-40f8-8d31-beb7ab1b138c/item\", [\"require\", \"exports\", \"683aa047-8043-40f8-8d31-beb7ab1b138c/tween\", \"683aa047-8043-40f8-8d31-beb7ab1b138c/delay\", \"683aa047-8043-40f8-8d31-beb7ab1b138c/animation\"], function (require, exports, tween_1, delay_1, animation_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var syncv = function (vector, values) {\r\n        var _a = __read(values, 3), x = _a[0], y = _a[1], z = _a[2];\r\n        vector.set(x, y, z);\r\n    };\r\n    var syncq = function (quaternion, values) {\r\n        var _a = __read(values, 4), x = _a[0], y = _a[1], z = _a[2], w = _a[3];\r\n        quaternion.set(x, y, z, w);\r\n    };\r\n    var getEntityByName = function (name) {\r\n        return Object.keys(engine.entities)\r\n            .map(function (key) { return engine.entities[key]; })\r\n            .filter(function (entity) { return entity.name === name; })[0];\r\n    };\r\n    var Tools = /** @class */ (function () {\r\n        function Tools() {\r\n            var _this = this;\r\n            this.canvas = new UICanvas();\r\n            this.tweenSystem = new tween_1.TweenSystem();\r\n            this.delaySystem = new delay_1.DelaySystem();\r\n            this.getContainer = function () {\r\n                if (!_this.container) {\r\n                    _this.container = new UIContainerStack(_this.canvas);\r\n                    _this.container.width = 800;\r\n                    _this.container.height = '100%';\r\n                    _this.container.hAlign = 'center';\r\n                    _this.container.vAlign = 'bottom';\r\n                    _this.container.positionY = 50;\r\n                }\r\n                return _this.container;\r\n            };\r\n        }\r\n        Tools.prototype.init = function () {\r\n            engine.addSystem(this.tweenSystem);\r\n            engine.addSystem(this.delaySystem);\r\n        };\r\n        Tools.prototype.getEntities = function () {\r\n            return this.tweenSystem.syncableGroup.entities;\r\n        };\r\n        Tools.prototype.spawn = function (host, props, channel) {\r\n            var _this = this;\r\n            // handle actions\r\n            channel.handleAction('move', function (action) {\r\n                var _a = action.values, target = _a.target, tween = __rest(_a, [\"target\"]);\r\n                var sender = action.sender;\r\n                var entity = getEntityByName(target);\r\n                if (entity) {\r\n                    var currentTime = +Date.now();\r\n                    if (entity.hasComponent(tween_1.Tweenable)) {\r\n                        var existingTweenble = entity.getComponent(tween_1.Tweenable);\r\n                        if (existingTweenble.sender !== action.sender &&\r\n                            existingTweenble.type == 'move' &&\r\n                            currentTime - existingTweenble.timestamp < 500 &&\r\n                            existingTweenble.x === action.values.x &&\r\n                            existingTweenble.y === action.values.y &&\r\n                            existingTweenble.z === action.values.z) {\r\n                            // same tween already in progress?\r\n                            return;\r\n                        }\r\n                    }\r\n                    var origin = entity.getComponent(Transform).position.clone();\r\n                    var tweenable = new tween_1.Tweenable(__assign(__assign({}, tween), { type: 'move', channel: channel,\r\n                        origin: origin,\r\n                        sender: sender, timestamp: currentTime }));\r\n                    entity.addComponentOrReplace(tweenable);\r\n                    entity.addComponentOrReplace(new tween_1.Syncable());\r\n                }\r\n            });\r\n            channel.handleAction('rotate', function (action) {\r\n                var _a = action.values, target = _a.target, tween = __rest(_a, [\"target\"]);\r\n                var sender = action.sender;\r\n                var entity = getEntityByName(target);\r\n                if (entity) {\r\n                    var currentTime = +Date.now();\r\n                    if (entity.hasComponent(tween_1.Tweenable)) {\r\n                        var existingTweenble = entity.getComponent(tween_1.Tweenable);\r\n                        if (existingTweenble.sender !== action.sender &&\r\n                            existingTweenble.type == 'rotate' &&\r\n                            currentTime - existingTweenble.timestamp < 500 &&\r\n                            existingTweenble.x === action.values.x &&\r\n                            existingTweenble.y === action.values.y &&\r\n                            existingTweenble.z === action.values.z) {\r\n                            // same tween already in progress?\r\n                            return;\r\n                        }\r\n                    }\r\n                    var origin = entity.getComponent(Transform).rotation.clone()\r\n                        .eulerAngles;\r\n                    var tweenable = new tween_1.Tweenable(__assign(__assign({}, tween), { type: 'rotate', channel: channel,\r\n                        origin: origin,\r\n                        sender: sender, timestamp: currentTime }));\r\n                    entity.addComponentOrReplace(tweenable);\r\n                    entity.addComponentOrReplace(new tween_1.Syncable());\r\n                }\r\n            });\r\n            channel.handleAction('scale', function (action) {\r\n                var _a = action.values, target = _a.target, tween = __rest(_a, [\"target\"]);\r\n                var sender = action.sender;\r\n                var entity = getEntityByName(target);\r\n                if (entity) {\r\n                    var currentTime = +Date.now();\r\n                    if (entity.hasComponent(tween_1.Tweenable)) {\r\n                        var existingTweenble = entity.getComponent(tween_1.Tweenable);\r\n                        if (existingTweenble.sender !== action.sender &&\r\n                            existingTweenble.type == 'scale' &&\r\n                            currentTime - existingTweenble.timestamp < 500 &&\r\n                            existingTweenble.x === action.values.x &&\r\n                            existingTweenble.y === action.values.y &&\r\n                            existingTweenble.z === action.values.z) {\r\n                            // same tween already in progress?\r\n                            return;\r\n                        }\r\n                    }\r\n                    var origin = entity.getComponent(Transform).scale.clone();\r\n                    var tweenable = new tween_1.Tweenable(__assign(__assign({}, tween), { type: 'scale', channel: channel,\r\n                        origin: origin,\r\n                        sender: sender, timestamp: currentTime }));\r\n                    entity.addComponentOrReplace(tweenable);\r\n                    entity.addComponentOrReplace(new tween_1.Syncable());\r\n                }\r\n            });\r\n            channel.handleAction('animate', function (action) {\r\n                var _a = action.values, target = _a.target, animation = _a.animation, animAction = _a.animAction, speed = _a.speed, loop = _a.loop;\r\n                var sender = action.sender;\r\n                var entity = getEntityByName(target);\r\n                if (entity) {\r\n                    var currentTime = +Date.now();\r\n                    var animator = void 0;\r\n                    if (entity.hasComponent(Animator)) {\r\n                        animator = entity.getComponent(Animator);\r\n                    }\r\n                    else {\r\n                        animator = new Animator();\r\n                        entity.addComponent(animator);\r\n                    }\r\n                    var currentAnim = void 0;\r\n                    switch (animAction) {\r\n                        case 'play':\r\n                            if (entity.hasComponent(animation_1.Animated)) {\r\n                                var existingAnim = entity.getComponent(animation_1.Animated);\r\n                                if (existingAnim.sender !== action.sender &&\r\n                                    existingAnim.type == 'play' &&\r\n                                    currentTime - existingAnim.timestamp < 500 &&\r\n                                    existingAnim.name === action.values.animation &&\r\n                                    existingAnim.speed === existingAnim.speed) {\r\n                                    // same anim already in progress?\r\n                                    break;\r\n                                }\r\n                                if (existingAnim.type == 'play') {\r\n                                    // stop any other playing animations\r\n                                    animator.getClip(existingAnim.name).stop();\r\n                                }\r\n                            }\r\n                            var animClip = animator.getClip(animation);\r\n                            animClip.looping = loop;\r\n                            animClip.speed = speed;\r\n                            animClip.playing = true;\r\n                            var animated = new animation_1.Animated({\r\n                                type: 'play',\r\n                                name: animation,\r\n                                speed: speed,\r\n                                loop: loop,\r\n                                channel: channel,\r\n                                sender: sender,\r\n                                timestamp: currentTime,\r\n                            });\r\n                            entity.addComponentOrReplace(animated);\r\n                            entity.addComponentOrReplace(new tween_1.Syncable());\r\n                            break;\r\n                        case 'stop':\r\n                            if (!entity.hasComponent(animation_1.Animated)) {\r\n                                break;\r\n                            }\r\n                            currentAnim = entity.getComponent(animation_1.Animated).name;\r\n                            animator.getClip(currentAnim).stop();\r\n                            entity.getComponent(animation_1.Animated).type = 'stop';\r\n                            break;\r\n                        case 'pause':\r\n                            if (!entity.hasComponent(animation_1.Animated)) {\r\n                                break;\r\n                            }\r\n                            currentAnim = entity.getComponent(animation_1.Animated).name;\r\n                            animator.getClip(currentAnim).pause();\r\n                            entity.getComponent(animation_1.Animated).type = 'pause';\r\n                            break;\r\n                        case 'reset':\r\n                            if (!entity.hasComponent(animation_1.Animated)) {\r\n                                break;\r\n                            }\r\n                            currentAnim = entity.getComponent(animation_1.Animated).name;\r\n                            animator.getClip(currentAnim).reset();\r\n                            entity.getComponent(animation_1.Animated).type = 'reset';\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            channel.handleAction('delay', function (action) {\r\n                var _a = action.values, timeout = _a.timeout, onTimeout = _a.onTimeout;\r\n                if (action.sender === channel.id) {\r\n                    delay_1.setTimeout(function () {\r\n                        channel.sendActions(onTimeout);\r\n                    }, timeout * 1000);\r\n                }\r\n            });\r\n            channel.handleAction('interval', function (action) {\r\n                var _a = action.values, timeout = _a.timeout, onTimeout = _a.onTimeout;\r\n                if (action.sender === channel.id) {\r\n                    var intervalAction_1 = channel.createAction(action.actionId, action.values);\r\n                    channel.sendActions(onTimeout);\r\n                    delay_1.setTimeout(function () { return channel.sendActions([intervalAction_1]); }, timeout * 1000);\r\n                }\r\n            });\r\n            channel.handleAction('print', function (action) {\r\n                var _a = action.values, message = _a.message, duration = _a.duration, multiplayer = _a.multiplayer;\r\n                if (!multiplayer && action.sender !== channel.id) {\r\n                    // if not multiplayer and not ours prevent showing the message\r\n                    return;\r\n                }\r\n                var text = new UIText(_this.getContainer());\r\n                text.value = message;\r\n                text.fontSize = 24;\r\n                text.height = 30;\r\n                text.width = '100%';\r\n                text.hAlign = 'center';\r\n                text.hTextAlign = 'center';\r\n                delay_1.setTimeout(function () {\r\n                    text.visible = false;\r\n                    text.height = 0;\r\n                }, duration * 1000);\r\n            });\r\n            // sync initial values\r\n            channel.request('syncEntities', function (syncEntities) {\r\n                var e_3, _a;\r\n                try {\r\n                    for (var syncEntities_1 = __values(syncEntities), syncEntities_1_1 = syncEntities_1.next(); !syncEntities_1_1.done; syncEntities_1_1 = syncEntities_1.next()) {\r\n                        var syncEntity = syncEntities_1_1.value;\r\n                        var entityName = syncEntity.entityName, transform = syncEntity.transform, tween = syncEntity.tween, anim = syncEntity.anim;\r\n                        var entity = getEntityByName(entityName);\r\n                        if (entity) {\r\n                            var original = entity.getComponent(Transform);\r\n                            syncv(original.position, transform.position);\r\n                            syncq(original.rotation, transform.rotation);\r\n                            syncv(original.scale, transform.scale);\r\n                            if (tween) {\r\n                                var tweenable = new tween_1.Tweenable(__assign(__assign({}, tween), { channel: channel }));\r\n                                entity.addComponentOrReplace(tweenable);\r\n                            }\r\n                            if (anim) {\r\n                                var animated = new animation_1.Animated(__assign(__assign({}, anim), { channel: channel }));\r\n                                entity.addComponentOrReplace(animated);\r\n                                var animator = new Animator();\r\n                                entity.addComponentOrReplace(animator);\r\n                                var animClip = animator.getClip(anim.name);\r\n                                animClip.looping = anim.loop;\r\n                                animClip.speed = anim.speed;\r\n                                switch (anim.type) {\r\n                                    case 'play':\r\n                                        animClip.play();\r\n                                        break;\r\n                                    case 'stop':\r\n                                        animClip.stop();\r\n                                        break;\r\n                                    case 'pause':\r\n                                        animClip.pause();\r\n                                        break;\r\n                                    case 'reset':\r\n                                        animClip.reset();\r\n                                        break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (syncEntities_1_1 && !syncEntities_1_1.done && (_a = syncEntities_1.return)) _a.call(syncEntities_1);\r\n                    }\r\n                    finally { if (e_3) throw e_3.error; }\r\n                }\r\n            });\r\n            channel.reply('syncEntities', function () {\r\n                var entities = _this.getEntities();\r\n                return entities.map(function (entity) {\r\n                    var transform = entity.getComponent(Transform);\r\n                    var syncEntity = {\r\n                        entityName: entity.name,\r\n                        transform: {\r\n                            position: [\r\n                                transform.position.x,\r\n                                transform.position.y,\r\n                                transform.position.z,\r\n                            ],\r\n                            rotation: [\r\n                                transform.rotation.x,\r\n                                transform.rotation.y,\r\n                                transform.rotation.z,\r\n                                transform.rotation.w,\r\n                            ],\r\n                            scale: [transform.scale.x, transform.scale.y, transform.scale.z],\r\n                        },\r\n                    };\r\n                    if (entity.hasComponent(tween_1.Tweenable)) {\r\n                        var _a = entity.getComponent(tween_1.Tweenable), _ = _a.channel, tween = __rest(_a, [\"channel\"]);\r\n                        syncEntity.tween = tween;\r\n                    }\r\n                    if (entity.hasComponent(animation_1.Animated)) {\r\n                        var _b = entity.getComponent(animation_1.Animated), _ = _b.channel, anim = __rest(_b, [\"channel\"]);\r\n                        syncEntity.anim = anim;\r\n                    }\r\n                    return syncEntity;\r\n                });\r\n            });\r\n        };\r\n        return Tools;\r\n    }());\r\n    exports.default = Tools;\r\n});\r\n");