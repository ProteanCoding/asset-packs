eval("define(\"4bf77c44-42db-4134-90f0-06da4202ff04/game\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n});\r\n//import Button, { Props } from './item'\r\n//\r\n//const button = new Button()\r\n//const spawner = new Spawner<Props>(button)\r\n//\r\n//spawner.spawn(\r\n//  'button',\r\n//  new Transform({\r\n//    position: new Vector3(4, 0, 8)\r\n//  })\r\n//)\r\n//\r\ndefine(\"4bf77c44-42db-4134-90f0-06da4202ff04/item\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Button = /** @class */ (function () {\r\n        function Button() {\r\n            this.clip = new AudioClip('4bf77c44-42db-4134-90f0-06da4202ff04/sounds/LeverSciFi.mp3');\r\n            this.active = {};\r\n        }\r\n        Button.prototype.init = function () { };\r\n        Button.prototype.toggle = function (entity, value, playSound) {\r\n            if (playSound === void 0) { playSound = true; }\r\n            if (this.active[entity.name] === value)\r\n                return;\r\n            if (playSound) {\r\n                var source = new AudioSource(this.clip);\r\n                entity.addComponentOrReplace(source);\r\n                source.playing = true;\r\n            }\r\n            var animator = entity.getComponent(Animator);\r\n            var activateClip = animator.getClip('activate');\r\n            var deactivateClip = animator.getClip('deactivate');\r\n            activateClip.stop();\r\n            deactivateClip.stop();\r\n            var clip = value ? activateClip : deactivateClip;\r\n            clip.play();\r\n            this.active[entity.name] = value;\r\n        };\r\n        Button.prototype.spawn = function (host, props, channel) {\r\n            var _this = this;\r\n            var button = new Entity(host.name + '-button');\r\n            button.setParent(host);\r\n            var animator = new Animator();\r\n            var deactivateClip = new AnimationState('deactivate', { looping: false });\r\n            var activateClip = new AnimationState('activate', { looping: false });\r\n            animator.addClip(deactivateClip);\r\n            animator.addClip(activateClip);\r\n            button.addComponent(animator);\r\n            activateClip.stop();\r\n            button.addComponent(new GLTFShape('4bf77c44-42db-4134-90f0-06da4202ff04/models/Lever_Console.glb'));\r\n            button.addComponent(new OnPointerDown(function () {\r\n                var value = !_this.active[button.name];\r\n                var action = channel.createAction(value ? 'activate' : 'deactivate', {});\r\n                channel.sendActions([action]);\r\n            }, {\r\n                button: ActionButton.POINTER,\r\n                hoverText: 'Activate',\r\n                distance: 6\r\n            }));\r\n            this.active[button.name] = false;\r\n            // handle actions\r\n            channel.handleAction('activate', function (_a) {\r\n                var sender = _a.sender;\r\n                _this.toggle(button, true);\r\n                if (sender === channel.id) {\r\n                    channel.sendActions(props.onActivate);\r\n                }\r\n            });\r\n            channel.handleAction('deactivate', function (_a) {\r\n                var sender = _a.sender;\r\n                _this.toggle(button, false);\r\n                if (sender === channel.id) {\r\n                    channel.sendActions(props.onDeactivate);\r\n                }\r\n            });\r\n            // sync initial values\r\n            channel.request('isActive', function (isActive) {\r\n                return _this.toggle(button, isActive, false);\r\n            });\r\n            channel.reply('isActive', function () { return _this.active[button.name]; });\r\n        };\r\n        return Button;\r\n    }());\r\n    exports.default = Button;\r\n});\r\n");