eval('var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === "number") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\r\n};\r\n/// <reference path="./types.d.ts" />\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/node_modules/decentraland-builder-scripts/channel", ["require", "exports"], function (require, exports) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n    var REQUEST_VALUE = \'__request_value__\';\r\n    var REPLY_VALUE = \'__reply_value__\';\r\n    var POLL_INTERVAL = 5000;\r\n    function createChannel(id, host, bus) {\r\n        var handlers = {};\r\n        var requests = {};\r\n        var responses = {};\r\n        bus.on(host.name, function (action) {\r\n            var handler = handlers[action.actionId];\r\n            if (handler) {\r\n                handler(action);\r\n            }\r\n            // clear all pending requests for this entity\r\n            requests = {};\r\n        });\r\n        bus.on(REQUEST_VALUE, function (message) {\r\n            if (message.sender !== id && message.entityName === host.name) {\r\n                var key = message.key;\r\n                var response = responses[key];\r\n                if (response) {\r\n                    var value = response();\r\n                    var reply = {\r\n                        entityName: host.name,\r\n                        key: key,\r\n                        sender: id,\r\n                        value: value\r\n                    };\r\n                    bus.emit(REPLY_VALUE, reply);\r\n                }\r\n                // clear pending request for this key\r\n                delete requests[key];\r\n            }\r\n        });\r\n        bus.on(REPLY_VALUE, function (message) {\r\n            if (message.sender !== id && message.entityName === host.name) {\r\n                var key = message.key, value = message.value;\r\n                var request = requests[key];\r\n                if (request) {\r\n                    request(value);\r\n                }\r\n                // clear pending request for this key\r\n                delete requests[key];\r\n            }\r\n        });\r\n        return {\r\n            id: id,\r\n            bus: bus,\r\n            createAction: function (actionId, values) {\r\n                var action = {\r\n                    entityName: host.name,\r\n                    actionId: actionId,\r\n                    values: values\r\n                };\r\n                return action;\r\n            },\r\n            sendActions: function (actions) {\r\n                var e_1, _a;\r\n                if (actions === void 0) { actions = []; }\r\n                try {\r\n                    for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\r\n                        var base = actions_1_1.value;\r\n                        var action = __assign(__assign({}, base), { sender: id });\r\n                        bus.emit(action.entityName, action);\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            },\r\n            handleAction: function (actionId, handler) {\r\n                handlers[actionId] = handler;\r\n            },\r\n            request: function (key, callback) {\r\n                requests[key] = callback;\r\n                var request = { entityName: host.name, key: key, sender: id };\r\n                var interval = setInterval(function () {\r\n                    if (key in requests) {\r\n                        bus.emit(REQUEST_VALUE, request);\r\n                    }\r\n                    else {\r\n                        clearInterval(interval);\r\n                    }\r\n                }, POLL_INTERVAL);\r\n            },\r\n            reply: function (key, callback) {\r\n                responses[key] = callback;\r\n            }\r\n        };\r\n    }\r\n    exports.createChannel = createChannel;\r\n});\r\n/// <reference path="./types.d.ts" />\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/node_modules/decentraland-builder-scripts/inventory", ["require", "exports"], function (require, exports) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n    function createInventory(UICanvas, UIContainerStack, UIImage) {\r\n        var canvas = null;\r\n        var container = null;\r\n        var images = {};\r\n        function getContainer() {\r\n            if (!canvas) {\r\n                canvas = new UICanvas();\r\n            }\r\n            if (!container) {\r\n                container = new UIContainerStack(canvas);\r\n                container.isPointerBlocker = false;\r\n                container.vAlign = \'bottom\';\r\n                container.hAlign = \'right\';\r\n                container.stackOrientation = 0;\r\n                container.spacing = 0;\r\n                container.positionY = 75;\r\n                container.positionX = -25;\r\n            }\r\n            return container;\r\n        }\r\n        return {\r\n            add: function (id, texture) {\r\n                var image = images[id] || new UIImage(getContainer(), texture);\r\n                image.width = 128;\r\n                image.height = 128;\r\n                image.sourceTop = 0;\r\n                image.sourceLeft = 0;\r\n                image.sourceHeight = 256;\r\n                image.sourceWidth = 256;\r\n                image.isPointerBlocker = false;\r\n                image.visible = true;\r\n                images[id] = image;\r\n            },\r\n            remove: function (id) {\r\n                var image = images[id];\r\n                if (image) {\r\n                    image.visible = false;\r\n                    image.height = 0;\r\n                    image.width = 0;\r\n                }\r\n            },\r\n            has: function (id) {\r\n                return id in images && images[id].visible;\r\n            }\r\n        };\r\n    }\r\n    exports.createInventory = createInventory;\r\n});\r\n/// <reference path="./types.d.ts" />\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/node_modules/decentraland-builder-scripts/spawner", ["require", "exports", "node_modules/decentraland-builder-scripts/channel", "node_modules/decentraland-builder-scripts/inventory"], function (require, exports, channel_1, inventory_1) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n    var bus = new MessageBus();\r\n    var Spawner = /** @class */ (function () {\r\n        function Spawner(script) {\r\n            var inventory = inventory_1.createInventory(UICanvas, UIContainerStack, UIImage);\r\n            script.init({ inventory: inventory });\r\n            this.script = script;\r\n        }\r\n        Spawner.prototype.spawn = function (name, transform, props) {\r\n            if (transform === void 0) { transform = new Transform({ position: new Vector3(8, 0, 8) }); }\r\n            var host = new Entity(name);\r\n            host.addComponent(transform);\r\n            engine.addEntity(host);\r\n            var channel = channel_1.createChannel(\'channel-id\', host, bus);\r\n            this.script.spawn(host, props || {}, channel);\r\n        };\r\n        return Spawner;\r\n    }());\r\n    exports.Spawner = Spawner;\r\n});\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/game", ["require", "exports"], function (require, exports) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n});\r\n//import ScoreBoard, { Props } from \'./item\'\r\n//\r\n//const scoreBoard = new ScoreBoard()\r\n//const spawner = new Spawner<Props>(scoreBoard)\r\n//\r\n//spawner.spawn(\r\n//  \'scoreBoard\',\r\n//  new Transform({\r\n//    position: new Vector3(4, 2, 8),\r\n//    rotation: Quaternion.Euler(0, 0, 0)\r\n//  }),\r\n//  {\r\n//    initialVal: 1234,\r\n//    enabled: true,\r\n//    onThreshold: [{ entityName: \'scoreBoard\', actionId: \'reset\', values: {} }],\r\n//    threshold: 100\r\n//  }\r\n//)\r\n//\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/scoreboard", ["require", "exports"], function (require, exports) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n    var ScoreBoardComponent = /** @class */ (function () {\r\n        function ScoreBoardComponent(channel, currentValue, threshold, onThreshold, enabled, digit1, digit2, digit3, digit4) {\r\n            this.channel = channel;\r\n            this.currentValue = 0;\r\n            this.enabled = true;\r\n            this.currentValue = currentValue;\r\n            this.initialValue = currentValue;\r\n            this.enabled = enabled;\r\n            this.threshold = threshold;\r\n            this.onThreshold = onThreshold;\r\n            this.digit1 = digit1;\r\n            this.digit2 = digit2;\r\n            this.digit3 = digit3;\r\n            this.digit4 = digit4;\r\n        }\r\n        ScoreBoardComponent = __decorate([\r\n            Component(\'org.decentraland.ScoreBoard\'),\r\n            __metadata("design:paramtypes", [Object, Number, Number, Array, Boolean, TextShape,\r\n                TextShape,\r\n                TextShape,\r\n                TextShape])\r\n        ], ScoreBoardComponent);\r\n        return ScoreBoardComponent;\r\n    }());\r\n    exports.ScoreBoardComponent = ScoreBoardComponent;\r\n});\r\ndefine("1d45dc17-42d2-4d02-af19-f5528f395b13/item", ["require", "exports", \"1d45dc17-42d2-4d02-af19-f5528f395b13/scoreboard\"], function (require, exports, scoreboard_1) {\r\n    "use strict";\r\n    Object.defineProperty(exports, "__esModule", { value: true });\r\n    var ScoreBoard = /** @class */ (function () {\r\n        function ScoreBoard() {\r\n            this.activateClip = new AudioClip(\'1d45dc17-42d2-4d02-af19-f5528f395b13/sounds/NumpadPress.mp3\');\r\n        }\r\n        //   uvTable = [\r\n        // \t   [0.25, 0.25, 0.5, 0.25, 0.5, 0.5, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.5, 0.5, 0.25, 0.5],  //0\r\n        // \t   [0, 0.75, 0.25, 0.75, 0.25, 1, 0, 1, 0, 0.75, 0.25, 0.75, 0.25, 1, 0, 1] ,  //1\r\n        // \t   [0.25, 0.75, 0.5, 0.75, 0.5, 1, 0.25, 1, 0.25, 0.75, 0.5, 0.75, 0.5, 1, 0.25, 1],  //2\r\n        // \t   [0.5, 0.75, 0.75, 0.75, 0.75, 1, 0.5, 1, 0.5, 0.75, 0.75, 0.75, 0.75, 1, 0.5, 1],  //3\r\n        // \t   [0.75, 0.75, 1, 0.75, 1, 1, 0.75, 1, 0.75, 0.75, 1, 0.75, 1, 1, 0.75, 1],   //4\r\n        // \t   [0, 0.5, 0.25, 0.5, 0.25, 0.75, 0, 0.75, 0, 0.5, 0.25, 0.5, 0.25, 0.75, 0, 0.75] ,  //5\r\n        // \t   [0.25, 0.5, 0.5, 0.5, 0.5, 0.75, 0.25, 0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.75, 0.25, 0.75],  //6\r\n        // \t   [0.5, 0.5, 0.75, 0.5, 0.75, 0.75, 0.5, 0.75, 0.5, 0.5, 0.75, 0.5, 0.75, 0.75, 0.5, 0.75],  //7\r\n        // \t   [0.75, 0.5, 1, 0.5, 1, 0.75, 0.75, 0.75, 0.75, 0.5, 1, 0.5, 1, 0.75, 0.75, 0.75],  //8\r\n        // \t   [0, 0.25, 0.25, 0.25, 0.25, 0.5, 0, 0.5, 0, 0.25, 0.25, 0.25, 0.25, 0.5, 0, 0.5],   //9\r\n        // \t   [0.5, 0.25, 0.75, 0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.25, 0.75, 0.5, 0.5, 0.5]   //empty\r\n        //   ]\r\n        ScoreBoard.prototype.init = function () {\r\n            // const numberMaterial = new Material()\r\n            // const numberTexture = new Texture(\'images/Scoreboard1024_TX.png\')\r\n            // numberMaterial.albedoTexture = numberTexture\r\n            // numberMaterial.alphaTexture = numberTexture\r\n            // numberMaterial.metallic  = 0\r\n            // numberMaterial.emissiveColor = Color3.Red()\r\n            // numberMaterial.emissiveIntensity = 3\r\n            // this.numberMaterial = numberMaterial\r\n        };\r\n        ScoreBoard.prototype.updateBoard = function (entity, newValue, playSound) {\r\n            if (playSound === void 0) { playSound = true; }\r\n            var score = entity.getComponent(scoreboard_1.ScoreBoardComponent);\r\n            score.currentValue = Math.max(0, newValue);\r\n            if (playSound) {\r\n                var clip = this.activateClip;\r\n                var source = new AudioSource(clip);\r\n                source.volume = 0.3;\r\n                entity.addComponentOrReplace(source);\r\n                source.playOnce();\r\n            }\r\n            if (newValue == score.threshold) {\r\n                score.channel.sendActions(score.onThreshold);\r\n            }\r\n            var d1 = score.currentValue % 10;\r\n            var d2 = Math.floor((score.currentValue % 100) / 10);\r\n            var d3 = Math.floor((score.currentValue % 1000) / 100);\r\n            var d4 = Math.floor((score.currentValue % 10000) / 1000);\r\n            // score.digit1.uvs = this.uvTable[d1]\r\n            // score.digit2.uvs = this.uvTable[d2]\r\n            // score.digit3.uvs = this.uvTable[d3]\r\n            // score.digit4.uvs = this.uvTable[d4]\r\n            score.digit1.value = d1.toString();\r\n            score.digit2.value = d2.toString();\r\n            score.digit3.value = d3.toString();\r\n            score.digit4.value = d4.toString();\r\n            if (score.currentValue < 1000) {\r\n                score.digit4.value = \'\';\r\n            }\r\n            if (score.currentValue < 100) {\r\n                score.digit3.value = \'\';\r\n            }\r\n            if (score.currentValue < 10) {\r\n                score.digit2.value = \'\';\r\n            }\r\n        };\r\n        ScoreBoard.prototype.spawn = function (host, props, channel) {\r\n            var _this = this;\r\n            var board = new Entity();\r\n            board.setParent(host);\r\n            board.addComponent(new Transform({\r\n                position: new Vector3(0, 0, 0)\r\n            }));\r\n            board.addComponent(new GLTFShape(\'1d45dc17-42d2-4d02-af19-f5528f395b13/models/board/Scoreboard.glb\'));\r\n            var digit1 = new Entity();\r\n            digit1.setParent(host);\r\n            digit1.addComponent(new Transform({\r\n                rotation: Quaternion.Euler(0, 180, 0),\r\n                position: new Vector3(-0.6, 0.5, 0.06),\r\n                scale: new Vector3(0.8, 0.8, 0.8)\r\n            }));\r\n            var digit1Text = new TextShape(\'0\');\r\n            digit1Text.fontSize = 9;\r\n            digit1Text.color = Color3.Red();\r\n            digit1.addComponent(digit1Text);\r\n            // digit1.addComponent(new PlaneShape())\r\n            // digit1.addComponent(this.numberMaterial)\r\n            var digit2 = new Entity();\r\n            digit2.setParent(host);\r\n            digit2.addComponent(new Transform({\r\n                rotation: Quaternion.Euler(0, 180, 0),\r\n                position: new Vector3(-0.2, 0.5, 0.06),\r\n                scale: new Vector3(0.8, 0.8, 0.8)\r\n            }));\r\n            var digit2Text = new TextShape(\'0\');\r\n            digit2Text.fontSize = 9;\r\n            digit2Text.color = Color3.Red();\r\n            digit2.addComponent(digit2Text);\r\n            // digit2.addComponent(new PlaneShape())\r\n            // digit2.addComponent(this.numberMaterial)\r\n            var digit3 = new Entity();\r\n            digit3.setParent(host);\r\n            digit3.addComponent(new Transform({\r\n                rotation: Quaternion.Euler(0, 180, 0),\r\n                position: new Vector3(0.2, 0.5, 0.06),\r\n                scale: new Vector3(0.8, 0.8, 0.8)\r\n            }));\r\n            var digit3Text = new TextShape(\'0\');\r\n            digit3Text.fontSize = 9;\r\n            digit3Text.color = Color3.Red();\r\n            digit3.addComponent(digit3Text);\r\n            // digit3.addComponent(new PlaneShape())\r\n            // digit3.addComponent(this.numberMaterial)\r\n            var digit4 = new Entity();\r\n            digit4.setParent(host);\r\n            digit4.addComponent(new Transform({\r\n                rotation: Quaternion.Euler(0, 180, 0),\r\n                position: new Vector3(0.6, 0.5, 0.06),\r\n                scale: new Vector3(0.8, 0.8, 0.8)\r\n            }));\r\n            var digit4Text = new TextShape(\'0\');\r\n            digit4Text.fontSize = 9;\r\n            digit4Text.color = Color3.Red();\r\n            digit4.addComponent(digit4Text);\r\n            // digit4.addComponent(new PlaneShape())\r\n            // digit4.addComponent(this.numberMaterial)\r\n            board.addComponent(new scoreboard_1.ScoreBoardComponent(channel, props.initialVal, props.threshold, props.onThreshold, props.enabled, digit1.getComponent(TextShape), digit2.getComponent(TextShape), digit3.getComponent(TextShape), digit4.getComponent(TextShape)));\r\n            this.updateBoard(board, props.initialVal, false);\r\n            var score = board.getComponent(scoreboard_1.ScoreBoardComponent);\r\n            // handle actions\r\n            channel.handleAction(\'increase\', function () {\r\n                if (!score.enabled)\r\n                    return;\r\n                _this.updateBoard(board, score.currentValue + 1);\r\n            });\r\n            channel.handleAction(\'decrease\', function () {\r\n                if (!score.enabled)\r\n                    return;\r\n                _this.updateBoard(board, score.currentValue - 1);\r\n            });\r\n            channel.handleAction(\'reset\', function () {\r\n                if (!score.enabled)\r\n                    return;\r\n                _this.updateBoard(board, score.initialValue);\r\n            });\r\n            channel.handleAction(\'enable\', function () {\r\n                score.enabled = true;\r\n            });\r\n            channel.handleAction(\'disable\', function () {\r\n                score.enabled = false;\r\n            });\r\n            channel.handleAction(\'toggleEnable\', function () {\r\n                score.enabled != score.enabled;\r\n            });\r\n            // sync initial values\r\n            channel.request(\'value\', function (count) {\r\n                score.enabled = count.enabled;\r\n                _this.updateBoard(board, count.currentValue, false);\r\n            });\r\n            channel.reply(\'value\', function () {\r\n                var _a = board.getComponent(scoreboard_1.ScoreBoardComponent), enabled = _a.enabled, currentValue = _a.currentValue;\r\n                return { enabled: enabled, currentValue: currentValue };\r\n            });\r\n        };\r\n        return ScoreBoard;\r\n    }());\r\n    exports.default = ScoreBoard;\r\n});\r\n');